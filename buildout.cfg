[buildout]
newest = false
prefer-final = false
download-cache = .cache
develop = .
parts = 

[project]
name = infi.projector
homepage = https://github.com/Infinidat/${project:name}
namespace_packages = ['infi']
install_requires = [
	'docopt',
	'git-py',
	'infi.execute',
	'infi.recipe.template.version',
	'pip',
	'setuptools',
	'six',
	'zc.buildout'
	]
version_file = src/infi/projector/__version__.py
description = Python project management tool
long_description = For the complete document, see the README.md file over at GitHub
console_scripts = ['projector = infi.projector.scripts:projector']
gui_scripts = []
package_data = [
	'.gitignore',
	'buildout.cfg',
	'get-pip.py',
	'README.md',
	'setup.in'
	]
upgrade_code = {5180d8a8-ea0a-11e1-ad0a-1093e90fe436}
product_name = infi.projector
post_install_script_name = None
pre_uninstall_script_name = None
command_plugins = ['repository = infi.projector.plugins.builtins.repository:RepositoryPlugin', 'envenv = infi.projector.plugins.builtins.devenv:DevEnvPlugin', 'version = infi.projector.plugins.builtins.version:VersionPlugin', 'requirements = infi.projector.plugins.builtins.requirements:RequirementsPlugin', 'console_scripts = infi.projector.plugins.builtins.console_scripts:ConsoleScriptsPlugin', 'gui_scripts = infi.projector.plugins.builtins.gui_scripts:GuiScriptsPlugin', 'package_scripts = infi.projector.plugins.builtins.package_scripts:PackageScriptsPlugin', 'package_data = infi.projector.plugins.builtins.package_data:PackageDataPlugin', 'isolated_pyton = infi.projector.plugins.builtins.isolated_python:IsolatedPythonPlugin', 'submodules = infi.projector.plugins.builtins.submodules:SubmodulePlugin']

[isolated-python]
recipe = infi.recipe.python
version = v2.7.8.8

[setup.py]
recipe = infi.recipe.template.version
input = setup.in
output = setup.py

[__version__.py]
recipe = infi.recipe.template.version
output = ${project:version_file}

[development-scripts]
dependent-scripts = true
recipe = infi.recipe.console_scripts
eggs = infi.traceback
	${project:name}
	infi.unittest
	ipython
	mock
	nose
interpreter = python

[pack]
recipe = infi.recipe.application_packager
company = None

[sublime]
recipe = corneti.recipes.codeintel
eggs = ${development-scripts:eggs}

